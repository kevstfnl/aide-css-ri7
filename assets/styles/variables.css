/*

EXPLICATION COMPLETE DU FONCTIONNEMENT:

Ce fichier peut etre intimidant vue comme ça, cependant le fonctionnement et la création de ce fichier,
est moins complexe qu'il en a l'aire, pour expliquer les différentes partie de ce fichier css,
je vais faire un petit schema ici meme pour ajouter une gestion des couleurs, et du theme (sombre ou claire): 


Définition et utilisation de variables en CSS:
    ":root": cette pseudo-class est utilisé pour définir des variables par defaut (oui comme en JavaScript),
    ses variables, peuvent etre utilisées et définies meme en dehors de ":root",
    elle peuvent contenirs des valeurs (px, %, vh, ...), des couleurs (rgb(), hsl(), ...)
    mais aussi toutes valeurs de propriétés (solid, ease-in-out.

    Les variables en css ressemble à ça: "--nom-de-la-variables" (les deux tirets sont obligatoire),
    Voici comment:
        - Definir une nouvelle variables: "--ma-variable: valeur",
        - Utiliser / Récupérer la valeurs d'une variables: "var(--ma-variable")".

    Pour en revenir à la gestion des couleurs et du theme, il me suffit de préparer, un ensemble de couleur,
    (une couleurs primaire, secondaire, une couleur pour le background, peut etre des bordures, ou autre ?),
    c'est dans la partie ":root" que je vais définir toutes les couleurs de mon site mais avec quelques variations.

    En l'occurence, pour ce pprojet j'ai choisi d'utilisé du rouge comme couleur principale,
    et du jaune en couleur complementaire, cependant je vais avoir besoins de plusieurs variations de ses memes couleurs,
    (version plus claire, plus foncé) mais aussi d'une version qui s'affichera bien avec un mode sombre.

    C'est pour cela que dans ma partie :root j'ai ennormément de variables définies,
    j'ai choisi de faire 5 variations possible de chaque couleurs pour chaque theme, je me retrouve donc avec des variables
    nommé ainsi: "--primary-[dark ou light]-[1 à 5]: "1" etant la version la plus claire et "5" la plus foncé.


Pour le choix des couleurs / la création de palette de couleur, vous pouvez utiliser https://coolors.co/), ou vous faire aider par votre IA favorite.

*/

/* DÉCLARATION DES VARIABLES DE BASE: */
:root {
    /* PRIMARY COLORS LIGHT */
    --primary-light-1: hsl(9, 80%, 55%);
    --primary-light-2: hsl(9, 80%, 50%);
    --primary-light-3: hsl(9, 80%, 45%);
    --primary-light-4: hsl(9, 80%, 40%);
    --primary-light-5: hsl(9, 80%, 35%);

    /* PRIMARY COLORS DARK */
    --primary-dark-1: hsl(9, 90%, 30%);
    --primary-dark-2: hsl(9, 90%, 25%);
    --primary-dark-3: hsl(9, 90%, 20%);
    --primary-dark-4: hsl(9, 90%, 15%);
    --primary-dark-5: hsl(9, 90%, 10%);

    /* SECONDARY COLORS LIGHT */
    --secondary-light-1: hsl(51, 80%, 45%);
    --secondary-light-2: hsl(51, 80%, 40%);
    --secondary-light-3: hsl(51, 80%, 35%);
    --secondary-light-4: hsl(51, 80%, 30%);
    --secondary-light-5: hsl(51, 80%, 25%);

    /* SECONDARY COLORS DARK */
    --secondary-dark-1: hsl(51, 90%, 25%);
    --secondary-dark-2: hsl(51, 90%, 20%);
    --secondary-dark-3: hsl(51, 90%, 15%);
    --secondary-dark-4: hsl(51, 90%, 10%);
    --secondary-dark-5: hsl(51, 90%, 5%);

    /* BACKGROUND COLORS LIGHT */
    --background-light-1: hsl(9, 5%, 98%);
    --background-light-2: hsl(9, 5%, 90%);
    --background-light-3: hsl(9, 5%, 85%);
    --background-light-4: hsl(9, 5%, 80%);
    --background-light-5: hsl(9, 5%, 75%);

    /* BACKGROUND COLORS DARK */
    --background-dark-1: hsl(9, 10%, 2%);
    --background-dark-2: hsl(9, 10%, 8%);
    --background-dark-3: hsl(9, 10%, 15%);
    --background-dark-4: hsl(9, 10%, 20%);
    --background-dark-5: hsl(9, 10%, 25%);

    /* TEXT COLORS LIGHT */
    --text-light-1: hsl(9, 5%, 3%);
    --text-light-2: hsl(9, 5%, 10%);
    --text-light-3: hsl(9, 5%, 18%);
    --text-light-4: hsl(9, 5%, 25%);
    --text-light-5: hsl(9, 5%, 30%);

    /* TEXT COLORS DARK */
    --text-dark-1: hsl(9, 5%, 98%);
    --text-dark-2: hsl(9, 5%, 95%);
    --text-dark-3: hsl(9, 5%, 92%);
    --text-dark-4: hsl(9, 5%, 88%);
    --text-dark-5: hsl(9, 5%, 83%);

    /* BORDER COLORS LIGHT */
    --border-light-1: hsl(9, 5%, 80%);
    --border-light-2: hsl(9, 5%, 75%);
    --border-light-3: hsl(9, 5%, 70%);
    --border-light-4: hsl(9, 5%, 65%);
    --border-light-5: hsl(9, 5%, 60%);

    /* BORDER COLORS DARK */
    --border-dark-1: hsl(9, 10%, 5%);
    --border-dark-2: hsl(9, 10%, 10%);
    --border-dark-3: hsl(9, 10%, 15%);
    --border-dark-4: hsl(9, 10%, 20%);
    --border-dark-5: hsl(9, 10%, 25%);
}


/* 

Application du mode sombre au projet::after

    Dans cette partie, je vais tous simplement définir de nouvelles variables,
    cette fois-ci sans "dark", ou "light" contenue dans le nom, cela me permet d'utiliser
    qu'un seul "type" de variable qui seront automatiquement mis à jour selon le theme de l'utilisateur.

    Mais comment faire pour récupérer le theme de l'utilisateur ?

    C'est là que les media queries entre en jeux, ils ne servent pas qu'à faire des sites responsive !
    En l'occurence c'est:
        - @media (prefers-color-scheme: dark)
        - @media (prefers-color-scheme: light)

    qui vont nous interrésé, comme leurs nom l'indique, ils permettent de savoir si l'utilisateur,
    a dans les parametres de sont navigateur, une préférence pour un theme claire ou sombre.
    ainsi nous pouvons attribuer nos variables.

    Cependant, certains utilisateur voudrons certainement pouvoir changer le theme sur votre site,
    pour faire cela c'est avec l'aide de JavaScript que nous allons procédé. (voir "/src/theme.js").
    Ce script va permettre, au clique sur un bouton, d'ajouter une class (dark ou light) à notre élément <html>
    ensuite grace au pseudo-class ":not()" et ":is()", nous pouvons vérifier si, notre élément contient la class
    correspondante au theme ! 

*/


/* 
THEME PAR DEFAUT DE L'UTILISATEUR SOMBRE 
(ici je définie selon le theme du site toutes les variables de couleurs sans "-dark" ni "-light")
*/
@media (prefers-color-scheme: dark) {

    /* Si html n'a pas la class ".light" */
    html:not(.light) {
        --primary-1: var(--primary-dark-1);
        --primary-2: var(--primary-dark-2);
        --primary-3: var(--primary-dark-3);
        --primary-4: var(--primary-dark-4);
        --primary-5: var(--primary-dark-5);
        --secondary-1: var(--secondary-dark-1);
        --secondary-2: var(--secondary-dark-2);
        --secondary-3: var(--secondary-dark-3);
        --secondary-4: var(--secondary-dark-4);
        --secondary-5: var(--secondary-dark-5);
        --background-1: var(--background-dark-1);
        --background-2: var(--background-dark-2);
        --background-3: var(--background-dark-3);
        --background-4: var(--background-dark-4);
        --background-5: var(--background-dark-5);
        --text-1: var(--text-dark-1);
        --text-2: var(--text-dark-2);
        --text-3: var(--text-dark-3);
        --text-4: var(--text-dark-4);
        --text-5: var(--text-dark-5);
        --border-1: var(--border-dark-1);
        --border-2: var(--border-dark-2);
        --border-3: var(--border-dark-3);
        --border-4: var(--border-dark-4);
        --border-5: var(--border-dark-5);
    }

    /* Si html a la class ".light" */
    html:is(.light) {
        --primary-1: var(--primary-light-1);
        --primary-2: var(--primary-light-2);
        --primary-3: var(--primary-light-3);
        --primary-4: var(--primary-light-4);
        --primary-5: var(--primary-light-5);
        --secondary-1: var(--secondary-light-1);
        --secondary-2: var(--secondary-light-2);
        --secondary-3: var(--secondary-light-3);
        --secondary-4: var(--secondary-light-4);
        --secondary-5: var(--secondary-light-5);
        --background-1: var(--background-light-1);
        --background-2: var(--background-light-2);
        --background-3: var(--background-light-3);
        --background-4: var(--background-light-4);
        --background-5: var(--background-light-5);
        --text-1: var(--text-light-1);
        --text-2: var(--text-light-2);
        --text-3: var(--text-light-3);
        --text-4: var(--text-light-4);
        --text-5: var(--text-light-5);
        --border-1: var(--border-light-1);
        --border-2: var(--border-light-2);
        --border-3: var(--border-light-3);
        --border-4: var(--border-light-4);
        --border-5: var(--border-light-5);
    }
}

/* THEME PAR DEFAUT DE L'UTILISATEUR CLAIR */
@media (prefers-color-scheme: light) {

    /* Si html n'a pas la class ".dark" */
    html:not(.dark) {
        --primary-1: var(--primary-light-1);
        --primary-2: var(--primary-light-2);
        --primary-3: var(--primary-light-3);
        --primary-4: var(--primary-light-4);
        --primary-5: var(--primary-light-5);
        --secondary-1: var(--secondary-light-1);
        --secondary-2: var(--secondary-light-2);
        --secondary-3: var(--secondary-light-3);
        --secondary-4: var(--secondary-light-4);
        --secondary-5: var(--secondary-light-5);
        --background-1: var(--background-light-1);
        --background-2: var(--background-light-2);
        --background-3: var(--background-light-3);
        --background-4: var(--background-light-4);
        --background-5: var(--background-light-5);
        --text-1: var(--text-light-1);
        --text-2: var(--text-light-2);
        --text-3: var(--text-light-3);
        --text-4: var(--text-light-4);
        --text-5: var(--text-light-5);
        --border-1: var(--border-light-1);
        --border-2: var(--border-light-2);
        --border-3: var(--border-light-3);
        --border-4: var(--border-light-4);
        --border-5: var(--border-light-5);
    }

    /* Si html a la class ".dark" */
    html:is(.dark) {
        --primary-1: var(--primary-dark-1);
        --primary-2: var(--primary-dark-2);
        --primary-3: var(--primary-dark-3);
        --primary-4: var(--primary-dark-4);
        --primary-5: var(--primary-dark-5);
        --secondary-1: var(--secondary-dark-1);
        --secondary-2: var(--secondary-dark-2);
        --secondary-3: var(--secondary-dark-3);
        --secondary-4: var(--secondary-dark-4);
        --secondary-5: var(--secondary-dark-5);
        --background-1: var(--background-dark-1);
        --background-2: var(--background-dark-2);
        --background-3: var(--background-dark-3);
        --background-4: var(--background-dark-4);
        --background-5: var(--background-dark-5);
        --text-1: var(--text-dark-1);
        --text-2: var(--text-dark-2);
        --text-3: var(--text-dark-3);
        --text-4: var(--text-dark-4);
        --text-5: var(--text-dark-5);
        --border-1: var(--border-dark-1);
        --border-2: var(--border-dark-2);
        --border-3: var(--border-dark-3);
        --border-4: var(--border-dark-4);
        --border-5: var(--border-dark-5);
    }
}

/*

Utilisation dans le projet:

    Pour finir, durant le developpement du css de votre site, pour colorisé vos éléments,
    les variables qui seront, selon le theme et les préférences de l'utilisateur, mis à jour, automatiquement.

    par exemple, dans ce projet, pour mettre un background sur un élément on utilisera:
        "background-color: var(--background-[un numéro entre 1 et 5]"
    
    Idem pour les autres couleurs que vous aurais définies !



Liste des variables de ce projet:
    --primary-[1 à 5] (les couleurs principales)
    --secondary-[1 à 5] (les couleurs secondaires)
    --background-[1 à 5] (les couleurs de background)
    --text-[1 à 5] (les couleurs de texte)
    --border-[1 à 5] (les couleurs de bordure)

     (1 = plus claire, 5 = plus foncé)

    Le theme chosie est en principal des variation de rouge et des variations de jaune.
    a vous de faire vos propres palettes de couleur selon votre projet et vos envie !

*/



/* Petit bonus, vous pouvez mettre une transition sur tout les éléments coloré, pour que le changement de theme soit plus progressif et fluide ! */
* {
    transition: color 250ms, background-color 250ms, border-color 250ms;
}