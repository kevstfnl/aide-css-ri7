/* 
IMPORT PERMET D'INCLURE UN FICHIER EXTERNE A CE CSS, 
PRATIQUE POUR ORGANISER SON CSS. 
*/
@import "./variables.css";
/* <= c'est dans le fichier "variables.css" que contient toute la logique du mode sombre. */


/*
==============================================================================================================================
Cette partie est un "css reset", elle permet entre autre de supprimer les styles (pas tres beau) appliqué par defauts.
mais aussi d'ajouter des petites règles de base à des éléments que l'on applique souvent a chaque fois,
cela permet donc de moins ce répéter et de ce concentrer sur le style essentiel.

(il y en a plein d'autre sur internet, celui-là est un melange de ce que j'utilise sur tout mes projets css en premier lieux)
==============================================================================================================================
*/
* {
    /* par defaut tout les elements n'ont pas de marge, ni de padding */
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* 
    box-sizing: border-box; permet de dire au navigateur que lorsqu'on definit une width et une height,
    la taille des borders sera compris dans la la taille de l'élément .
    (utile pour des animations avec les bordures sans faire bouger tout les éléments autours)
     */
}

/* on enlève tout les traits sous les liens et lui met une couleurs variable */
a {
    text-decoration: none;
    color: var(--text-1);
}

ul,
ol {
    /* on enlève les points / numéro de toutes les listes */
    list-style: none;
}

button {
    /* on met le changement de curseur quand on passe la souris sur un bouton (pourquoi c'est pas par defaut ?!) */
    cursor: pointer;

    /* on degage le style par defaut (pas bo)*/
    border: none;
    background: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    /* retour a la ligne plus "jolie" pour des titres */
    text-wrap: balance;
}

p {
    /* retour a la ligne plus "jolie" pour des paragraphes */
    text-wrap: pretty;
    color: var(--t);
}

body {
    /* Police d'ecriture par defaut de l'ordinateur */
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

    /* couleurs variables (sombre / claire) */
    background-color: var(--background-5);
    color: var(--text-1);

    scroll-behavior: smooth;
    /* mouvement fluide lors du click dans un lien encre (vers un contenu de la meme page */

    line-height: 1.5;
    /*espacement entre les lignes de texte (valeur recommandé par beaucoup de web designer) */
    overflow-x: hidden;
    /* cache les éléments debordant de l'élément body et enlève la bar de scroll horizontal */
}

/*
Dans cette partie je definie des class qui peuvents entre utile durant le développement,
pas tres grave si je ne les utilises pas, cependant cela me permet d'ajouter plus rapidement un style
a mes éléments sans quitter mon fichier css ou meme de les ajouter de façon plus facile dans le Javascript.

(exemple pour cacher un élément dans le javascript: element.classList.add("hidden); //ajoute la class "hidden" a mon élément.)
*/


/* Raccourcis pour les couleurs de background */
.bg-5 {
    background-color: var(--background-5);
}

.bg-4 {
    background-color: var(--background-4);
}

.bg-3 {
    background-color: var(--background-3);
}

.bg-2 {
    background-color: var(--background-2);
}

.bg-2 {
    background-color: var(--background-1);
}

/* Raccourcis pour les couleurs de text avec couleurs primaires */
.pri-5 {
    color: var(--primary-5);
}

.pri-4 {
    color: var(--primary-4);
}

.pri-3 {
    color: var(--primary-3);
}

.pri-2 {
    color: var(--primary-2);
}

.pri-1 {
    color: var(--primary-1);
}

/* Raccourcis pour les couleurs de text avec couleurs secondaires */
.sec-5 {
    color: var(--secondary-5);
}

.sec-4 {
    color: var(--secondary-4);
}

.sec-3 {
    color: var(--secondary-3);
}

.sec-2 {
    color: var(--secondary-2);
}

.sec-1 {
    color: var(--secondary-1);
}

.hidden {
    display: none !important;
    /* 
    Astuce pour des animations de modale, 
    il peut m'arriver de faire un transform: scale(0); d'ajouter une transition: transform; 
    a la place de faire display: none;
    */
}

/* Modele de boite par defaut (div, article, ...) */
.box {
    padding: 1em;
    /* 1em = taille de la font-size utilisé dans l'élément*/
    border-radius: 16px;
    border: 4px solid var(--border-1);
    transition: border-color 250ms;

    /* 
     * (CSS-Nesting) "&" représente l'élément .box,
     * c'est comme si j'avais ecrit en dehors de .box => .box:hover { }
    */
    &:hover {
        border-color: var(--border-2);
    }
}

/* Modele de bouton par defaut (a, button, ...) */
.btn {
    border-radius: 8px;
    /* bordure de base transparente pour faire une animation sur la couleurs de la bordure */
    border: 4px solid transparent;
    color: var(--text-5);
    font-weight: 700;
    transition: color 250ms, background-color 250ms, border-color 250ms;
}

/* PARTIE CSS CLASSIQUE */

#app {
    /* 
    avec grid, je donne ici la taille des lignes des 3 éléments enfant de #app,
    le 1er enfant: (header) => taille 50px,
    le 2eme enfant: (main) => taille 1fr (partage automatiquement 1 fraction de l'espace disponible),
    le 3eme enfant: (footer) => 100px,
    */
    display: grid;
    grid-template-rows: 50px 1fr 100px;
    min-height: 100vh;
    /* et je dit que la hauteur minimum est la taille de l'ecran */
}

header {
    display: flex;
    align-items: center;
    justify-content: center;
}

footer {
    display: flex;
    align-items: center;
    padding-inline: 2em;
}

main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-around;
}

section {
    max-width: 90vw;
}

.articles-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    gap: 1em;
    padding: 1em;

    /* (CSS-Nesting) - C'est comme si j'avait ecrit ".article-container article {"  */
    article {
        width: 300px;

        /* 
        (CSS-Nesting) - C'est comme si j'avait ecrit ".article-container article p{",
        Attention meme si c'est plus propre et precis,
        par convention on evite d'accumuler plus de 3-4 couche de nesting.
        */
        p {
            margin-left: 1rem;
            /* 1 rem = taille de base de la police (16px par defaut) */
        }
    }
}

.theme-button-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;

    .theme-button {
        /* 44px = taille recommandé des boutons utilisable sur mobile */
        height: 44px;
        background-color: var(--primary-3);
        box-shadow: var(--primary-5) 5px 5px 0;
        font-size: 1.5rem;
        transform: translate(0);
        transition: transform 150ms, box-shadow 150ms;

        &:active {
            box-shadow: var(--primary-5) 0 0 0;
            transform: translate(5px, 5px);
        }

        &:hover {
            background-color: var(--primary-1);
            box-shadow: var(--primary-3) 5px 5px 0;
        }
    }
}